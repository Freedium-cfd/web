version: '3.7'

services:
  redis_service:
    container_name: redis_service
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    networks:
      - freedium_net
    volumes:
      - freedium_dragonflydata:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      start_period: 20s
      timeout: 10s
      retries: 3
    restart: always
    stop_grace_period: 2m
    mem_limit: 5g

  postgres_freedium:
    image: postgres:16.3-alpine3.20
    container_name: postgres_freedium
    hostname: postgres_freedium
    networks:
      - freedium_net
    volumes:
      - ../postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    stop_grace_period: 2m

  pgadmin4_freedium:
    image: dpage/pgadmin4:8.12
    container_name: pgadmin4_freedium
    networks:
      - freedium_net
    ports:
      - 5433:80
    env_file:
      - ../.env
    hostname: pgadmin4_freedium
    restart: always
    tty: true

volumes:
  freedium_dragonflydata:
